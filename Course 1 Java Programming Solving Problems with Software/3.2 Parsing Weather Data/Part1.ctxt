#BlueJ class context
comment0.target=Part1
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=
comment10.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment11.params=
comment11.target=void\ TestLowestHumidityInManyFiles()
comment12.params=parser
comment12.target=double\ averageTemperatureFile(org.apache.commons.csv.CSVParser)
comment13.params=
comment13.target=void\ testAverageTemperatureFile()
comment14.params=parser\ value
comment14.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment15.params=
comment15.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=string
comment3.target=boolean\ isNumeric(java.lang.String)
comment4.params=currRow\ minSoFar\ type
comment4.target=org.apache.commons.csv.CSVRecord\ getMinOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String)
comment5.params=filename
comment5.target=void\ printAllTemp(java.lang.String)
comment6.params=
comment6.target=org.apache.commons.csv.CSVRecord\ fileWithColdestTemperature()
comment7.params=
comment7.target=void\ TestFileWithColdestTemperature()
comment8.params=parser
comment8.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testLowestHumidityInFile()
numComments=16
